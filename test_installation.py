import asyncio
import os
from dotenv import load_dotenv
from data_manager import DataManager

async def test_installation():
    """Teste l'installation et la configuration du syst√®me"""
    try:
        # Chargement des variables d'environnement
        load_dotenv()
        api_key = os.getenv('FOOTBALL_DATA_API_KEY')
        
        if not api_key:
            print("‚ùå Erreur: La cl√© API FOOTBALL_DATA_API_KEY n'est pas d√©finie dans le fichier .env")
            return
        
        # Initialisation du DataManager
        data_manager = DataManager(api_key)
        
        # Test de la connexion Redis
        try:
            data_manager.redis_client.ping()
            print("‚úÖ Test Redis: Connexion r√©ussie")
        except Exception as e:
            print(f"‚ùå Erreur Redis: {e}")
            return
        
        # Test de r√©cup√©ration des matchs de la Premier League
        matches = await data_manager.get_league_matches('PL')
        if matches:
            print("‚úÖ Test API: R√©cup√©ration des matchs r√©ussie")
        else:
            print("‚ùå Erreur: Impossible de r√©cup√©rer les matchs")
        
        # Test de r√©cup√©ration des √©quipes
        teams = await data_manager.get_league_teams('PL')
        if teams:
            print("‚úÖ Test API: R√©cup√©ration des √©quipes r√©ussie")
        else:
            print("‚ùå Erreur: Impossible de r√©cup√©rer les √©quipes")
        
        # Test de r√©cup√©ration des matchs en direct
        live_matches = await data_manager.get_live_matches('PL')
        if live_matches is not None:
            print("‚úÖ Test API: R√©cup√©ration des matchs en direct r√©ussie")
        else:
            print("‚ùå Erreur: Impossible de r√©cup√©rer les matchs en direct")
        
        # Test du cache
        test_data = {"test": "data"}
        data_manager._set_cached_data("test_key", test_data)
        cached_data = data_manager._get_cached_data("test_key")
        if cached_data == test_data:
            print("‚úÖ Test Cache: Syst√®me de cache fonctionnel")
        else:
            print("‚ùå Erreur: Le syst√®me de cache ne fonctionne pas correctement")
        
        print("\nüéâ Tous les tests ont √©t√© effectu√©s avec succ√®s !")
        
    except Exception as e:
        print(f"‚ùå Erreur lors des tests: {e}")
    finally:
        # Nettoyage
        data_manager.shutdown()

if __name__ == "__main__":
    asyncio.run(test_installation()) 